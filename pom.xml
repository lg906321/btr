<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>com.github</groupId>
	<artifactId>btr</artifactId>
	<version>1.0</version>
	<modules>
		<module>base</module>
		<module>config</module>
        <module>registry</module>
        <module>gateway</module>
        <module>accounts</module>
    </modules>
	<packaging>pom</packaging>

	<name>btr</name>
	<description>微服务演示项目 By Ryze</description>

	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>1.5.4.RELEASE</version>
		<relativePath/> <!-- lookup parent from repository -->
	</parent>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
		<java.version>1.8</java.version>
		<spring-cloud.version>Dalston.SR1</spring-cloud.version>
		<!-- docker镜像前缀 -->
		<docker.image.prefix>btr</docker.image.prefix>
		<!-- docker插件版本 -->
		<docker.plugin.version>0.4.13</docker.plugin.version>
		<!-- spring-boot-admin版本 -->
		<spring-boot-admin.version>1.5.0</spring-boot-admin.version>
		<!-- axon版本 -->
		<axon.version>3.0.4</axon.version>
		<!-- swagger版本 -->
		<swagger.version>2.5.0</swagger.version>
	</properties>

	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>org.springframework.cloud</groupId>
				<artifactId>spring-cloud-dependencies</artifactId>
				<version>${spring-cloud.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
			<!-- spring-boot-admin插件 start -->
			<dependency>
				<groupId>de.codecentric</groupId>
				<artifactId>spring-boot-admin-server</artifactId>
				<version>${spring-boot-admin.version}</version>
			</dependency>
			<dependency>
				<groupId>de.codecentric</groupId>
				<artifactId>spring-boot-admin-server-ui</artifactId>
				<version>${spring-boot-admin.version}</version>
			</dependency>
			<dependency>
				<groupId>de.codecentric</groupId>
				<artifactId>spring-boot-admin-server-ui-hystrix</artifactId>
				<version>${spring-boot-admin.version}</version>
			</dependency>
			<dependency>
				<groupId>de.codecentric</groupId>
				<artifactId>spring-boot-admin-server-ui-turbine</artifactId>
				<version>${spring-boot-admin.version}</version>
			</dependency>
			<dependency>
				<groupId>de.codecentric</groupId>
				<artifactId>spring-boot-admin-server-ui-login</artifactId>
				<version>${spring-boot-admin.version}</version>
			</dependency>
			<!-- spring-boot-admin插件 end -->
			<!-- fastjson -->
			<dependency>
				<groupId>com.alibaba</groupId>
				<artifactId>fastjson</artifactId>
				<version>1.2.15</version>
			</dependency>
			<!-- axon start -->
			<dependency>
				<groupId>org.axonframework</groupId>
				<artifactId>axon-spring-boot-autoconfigure</artifactId>
				<version>${axon.version}</version>
			</dependency>
			<!-- 与SpringCloud集成，使用DiscoveryClient和RESTemplate实现跨JVM的Command分发 -->
			<dependency>
				<groupId>org.axonframework</groupId>
				<artifactId>axon-distributed-commandbus-springcloud</artifactId>
				<version>${axon.version}</version>
			</dependency>
			<dependency>
				<groupId>org.axonframework</groupId>
				<artifactId>axon-mongo</artifactId>
				<version>${axon.version}</version>
			</dependency>
			<dependency>
				<groupId>org.axonframework</groupId>
				<artifactId>axon-amqp</artifactId>
				<version>${axon.version}</version>
			</dependency>
			<!-- axon-mongodb json序列化需要 -->
			<dependency>
				<groupId>com.fasterxml.jackson.datatype</groupId>
				<artifactId>jackson-datatype-jsr310</artifactId>
				<version>2.6.5</version>
			</dependency>
			<!-- axon end -->
		</dependencies>
	</dependencyManagement>

	<!-- 打包以及Docker构建 -->
	<build>
		<pluginManagement>
			<plugins>
				<plugin>
					<groupId>org.springframework.boot</groupId>
					<artifactId>spring-boot-maven-plugin</artifactId>
					<executions>
						<execution>
							<goals>
								<goal>repackage</goal>
							</goals>
						</execution>
					</executions>
				</plugin>
				<plugin>
					<groupId>com.spotify</groupId>
					<artifactId>docker-maven-plugin</artifactId>
					<version>${docker.plugin.version}</version>
					<executions>
						<execution>
							<phase>package</phase>
							<goals>
								<goal>build</goal>
							</goals>
						</execution>
					</executions>
					<configuration>
						<imageName>${docker.image.prefix}-${project.artifactId}</imageName>
						<dockerDirectory>${project.basedir}/</dockerDirectory>
						<resources>
							<resource>
								<targetPath>/</targetPath>
								<directory>${project.build.directory}</directory>
								<include>${project.build.finalName}.jar</include>
							</resource>
						</resources>
					</configuration>
				</plugin>
			</plugins>
		</pluginManagement>
	</build>


</project>
